name: Pull Request & Push to Master Branch

on:
  push:
    branches:
      main
  pull_request:
    branches:
      main
  workflow_dispatch:

env:
  USER1_FROM: ${{ secrets.USER1_FROM }}
  USER1_PRIVATE_KEY: ${{ secrets.USER1_PRIVATE_KEY }}
  USER2_FROM: ${{ secrets.USER2_FROM }}
  USER2_PRIVATE_KEY: ${{ secrets.USER2_PRIVATE_KEY }}
  ROOT_RPC: https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161
  MATIC_RPC: https://rpc-mumbai.maticvigil.com
  PROOF_API: https://apis.matic.network/api/v1/


jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install pre-commit
      - name: Run pre-commit
        run: |
          pre-commit install
          pre-commit run --all-files -v

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install .[test]
      - name: Run regular tests
        run: |
          pytest -m 'not online' -vv

  test_long:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']  # Only run this for one version
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install .[test]
      - name: Run real-chain tests
        run: |
          pytest -m 'online and not can_timeout' -vv -s -x
      - name: Run loong tests
        run: |
          pytest -m 'online and can_timeout' -vv -s -x

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install -e .[docs]
      - name: Make docs
        run: |
          cd docs
          make clean html
          sphinx-build -b linkcheck source build/linkcheck

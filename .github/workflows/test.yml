name: Pull Request & Push to Master Branch

on:
  push:
    branches:
      main
  pull_request:
    branches:
      main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install pre-commit
      - name: Run pre-commit
        run: |
          pre-commit install
          pre-commit run --all-files -v

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1  # Actions use the same credentials, so race sometimes
      matrix:
        python-version: ['3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install .[test]
      - name: Run regular tests
        run: |
          pytest -k 'not can_timeout' -vv

  test_long:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install .[test]
      - name: Run loong tests
        run: |
          pytest -k 'can_timeout' -vv

  # docs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: '3.10'
  #     - name: Install dependencies
  #       run: |
  #         pip install -U pip setuptools wheel
  #         pip install -e .[docs]
  #     - name: Make docs
  #       run: |
  #         cd docs
  #         make clean html
  #         sphinx-build -b linkcheck source build/linkcheck
